import UIKit

var point = CGPoint(x: 488, y: 0)
let alpha = 1
let strokeColor = UIColor(red: 54 / 255, green: 6 / 255, blue: 0, alpha: CGFloat(alpha)).cgColor

let path = UIBezierPath()
path.move(to: point)
point = CGPoint(x: 538, y: 16)
path.addLine(to: point)
point = CGPoint(x: 401, y: 68)
path.addCurve(to: point, controlPoint1: CGPoint(x: 487, y: 23), controlPoint2: CGPoint(x: 453, y: 59))
point = CGPoint(x: 496, y: 60)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 456, y: 81))
point = CGPoint(x: 396, y: 143)
path.addCurve(to: point, controlPoint1: CGPoint(x: 455, y: 82), controlPoint2: CGPoint(x: 433, y: 115))
point = CGPoint(x: 452, y: 126)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 429, y: 139))
point = CGPoint(x: 459, y: 119)
path.addLine(to: point)
point = CGPoint(x: 418, y: 242)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 442, y: 135))
point = CGPoint(x: 454, y: 189)
path.addLine(to: point)
point = CGPoint(x: 437, y: 287)
path.addCurve(to: point, controlPoint1: CGPoint(x: 446, y: 210), controlPoint2: CGPoint(x: 447, y: 259))
point = CGPoint(x: 467, y: 246)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 458, y: 266))
point = CGPoint(x: 464, y: 309)
path.addLine(to: point)
point = CGPoint(x: 481, y: 277)
path.addLine(to: point)
point = CGPoint(x: 482, y: 317)
path.addLine(to: point)
point = CGPoint(x: 489, y: 300)
path.addLine(to: point)
point = CGPoint(x: 489, y: 320)
path.addLine(to: point)
point = CGPoint(x: 491, y: 313)
path.addLine(to: point)
point = CGPoint(x: 499, y: 328)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 493, y: 320))
point = CGPoint(x: 503, y: 327)
path.addLine(to: point)
point = CGPoint(x: 500, y: 323)
path.addLine(to: point)
point = CGPoint(x: 525, y: 352)
path.addLine(to: point)
point = CGPoint(x: 505, y: 320)
path.addLine(to: point)
point = CGPoint(x: 547, y: 381)
path.addLine(to: point)
point = CGPoint(x: 512, y: 306)
path.addLine(to: point)
point = CGPoint(x: 517, y: 329)
path.addLine(to: point)
point = CGPoint(x: 498, y: 297)
path.addLine(to: point)
path.addLine(to: CGPoint(x: 517, y: 329))
point = CGPoint(x: 507, y: 279)
path.addLine(to: point)
point = CGPoint(x: 495, y: 251)
path.addLine(to: point)
point = CGPoint(x: 528, y: 319)
path.addLine(to: point)
point = CGPoint(x: 519, y: 228)
path.addLine(to: point)
point = CGPoint(x: 511, y: 181)
path.addLine(to: point)
point = CGPoint(x: 537, y: 294)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 519, y: 246))
point = CGPoint(x: 559, y: 156)
path.addLine(to: point)
point = CGPoint(x: 573, y: 262)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 559, y: 203))
point = CGPoint(x: 605, y: 135)
path.addCurve(to: point, controlPoint1: CGPoint(x: 577, y: 225), controlPoint2: CGPoint(x: 595, y: 190))
point = CGPoint(x: 591, y: 252)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 588, y: 206))
point = CGPoint(x: 640, y: 138)
path.addCurve(to: point, controlPoint1: CGPoint(x: 594, y: 236), controlPoint2: CGPoint(x: 631, y: 179))
point = CGPoint(x: 639, y: 108)
path.addLine(to: point)
point = CGPoint(x: 627, y: 233)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 640, y: 197))
point = CGPoint(x: 681, y: 113)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 664, y: 185))
point = CGPoint(x: 678, y: 247)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 690, y: 204))
point = CGPoint(x: 725, y: 117)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 716, y: 191))
point = CGPoint(x: 723, y: 128)
path.addLine(to: point)
point = CGPoint(x: 769, y: 244)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 728, y: 167))
point = CGPoint(x: 766, y: 179)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 762, y: 207))
point = CGPoint(x: 778, y: 250)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 762, y: 195))
point = CGPoint(x: 780, y: 225)
path.addLine(to: point)
point = CGPoint(x: 775, y: 274)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 781, y: 251))
point = CGPoint(x: 791, y: 242)
path.addLine(to: point)
point = CGPoint(x: 787, y: 252)
path.addLine(to: point)
point = CGPoint(x: 788, y: 334)
path.addLine(to: point)
point = CGPoint(x: 801, y: 261)
path.addLine(to: point)
point = CGPoint(x: 795, y: 303)
path.addLine(to: point)
point = CGPoint(x: 808, y: 254)
path.addLine(to: point)
point = CGPoint(x: 804, y: 271)
path.addLine(to: point)
point = CGPoint(x: 812, y: 263)
path.addLine(to: point)
point = CGPoint(x: 813, y: 242)
path.addLine(to: point)
point = CGPoint(x: 815, y: 246)
path.addLine(to: point)
point = CGPoint(x: 812, y: 225)
path.addLine(to: point)
point = CGPoint(x: 821, y: 239)
path.addLine(to: point)
point = CGPoint(x: 815, y: 189)
path.addLine(to: point)
point = CGPoint(x: 830, y: 215)
path.addLine(to: point)
point = CGPoint(x: 816, y: 125)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 831, y: 181))
point = CGPoint(x: 838, y: 153)
path.addQuadCurve(to: point, controlPoint: CGPoint(x: 830, y: 136))
point = CGPoint(x: 743, y: 18)
path.addCurve(to: point, controlPoint1: CGPoint(x: 821, y: 91), controlPoint2: CGPoint(x: 789, y: 35))
point = CGPoint(x: 773, y: 24)
path.addLine(to: point)
point = CGPoint(x: 739, y: 0)
path.addLine(to: point)
path.close()
let hairStrokeLayer = CAShapeLayer()
let hairLayer = CAGradientLayer()
let hairmaskLayer = CAShapeLayer()
hairLayer.frame = CGRect(x: 0, y: 0, width: 840, height: 382)
hairmaskLayer.path = path.cgPath
hairStrokeLayer.path = path.cgPath
hairLayer.colors = [UIColor(red: 147 / 255, green: 108 / 255, blue: 79 / 255, alpha: CGFloat(alpha)).cgColor, UIColor(red: 145 / 255, green: 81 / 255, blue: 82 / 255, alpha: CGFloat(alpha)).cgColor]
hairLayer.locations = [NSNumber(value: Double(385 / 840)), 1]
hairLayer.startPoint = CGPoint(x: 385 / 840, y: 0.5)
hairLayer.endPoint = CGPoint(x: 1, y: 0.5)
hairLayer.mask = hairmaskLayer
hairStrokeLayer.fillColor = UIColor.clear.cgColor
hairStrokeLayer.strokeColor = strokeColor
hairStrokeLayer.lineWidth = 1.5

let hairDarkPath = UIBezierPath()
point = CGPoint(x: 437, y: 287)
hairDarkPath.move(to: point)
point = CGPoint(x: 467, y: 246)
hairDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 458, y: 266))
point = CGPoint(x: 464, y: 309)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 481, y: 277)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 482, y: 317)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 489, y: 300)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 489, y: 320)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 491, y: 313)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 499, y: 328)
hairDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 493, y: 320))
point = CGPoint(x: 503, y: 327)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 525, y: 352)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 547, y: 381)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 517, y: 329)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 507, y: 279)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 493, y: 191)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 486, y: 232)
hairDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 484, y: 211))
point = CGPoint(x: 483, y: 226)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 478, y: 243)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 470, y: 200)
hairDarkPath.addLine(to: point)
point = CGPoint(x: 437, y: 287)
hairDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 467, y: 237))
hairDarkPath.close()
let hairDarkLayer = CAShapeLayer()
hairDarkLayer.path = hairDarkPath.cgPath
hairDarkLayer.fillColor = UIColor(red: 134 / 255, green: 83 / 255, blue: 63 / 255, alpha: CGFloat(alpha)).cgColor

let hairDarkPath2 = UIBezierPath()
point = CGPoint(x: 715, y: 170)
hairDarkPath2.move(to: point)
point = CGPoint(x: 723, y: 128)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 769, y: 244)
hairDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 728, y: 167))
point = CGPoint(x: 766, y: 179)
hairDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 762, y: 207))
point = CGPoint(x: 778, y: 250)
hairDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 762, y: 195))
point = CGPoint(x: 775, y: 274)
hairDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 781, y: 251))
point = CGPoint(x: 787, y: 252)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 788, y: 334)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 795, y: 303)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 804, y: 271)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 812, y: 263)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 813, y: 242)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 815, y: 246)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 812, y: 225)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 821, y: 239)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 815, y: 189)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 830, y: 215)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 816, y: 125)
hairDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 831, y: 181))
point = CGPoint(x: 838, y: 153)
hairDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 830, y: 136))
point = CGPoint(x: 795, y: 97)
hairDarkPath2.addCurve(to: point, controlPoint1: CGPoint(x: 830, y: 127), controlPoint2: CGPoint(x: 810, y: 112))
point = CGPoint(x: 810, y: 156)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 763, y: 101)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 767, y: 155)
hairDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 771, y: 135))
point = CGPoint(x: 749, y: 115)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 748, y: 168)
hairDarkPath2.addLine(to: point)
point = CGPoint(x: 722, y: 86)
hairDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 732, y: 135))
hairDarkPath2.close()
let hairDarkLayer2 = CAShapeLayer()
hairDarkLayer2.path = hairDarkPath2.cgPath
hairDarkLayer2.fillColor = UIColor(red: 132 / 255, green: 59 / 255, blue: 66 / 255, alpha: CGFloat(alpha)).cgColor

let hairLightPath = UIBezierPath()
point = CGPoint(x: 500, y: 95)
hairLightPath.move(to: point)
point = CGPoint(x: 480, y: 179)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 478, y: 121))
point = CGPoint(x: 501, y: 133)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 482, y: 164))
point = CGPoint(x: 500, y: 161)
hairLightPath.addLine(to: point)
point = CGPoint(x: 510, y: 144)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 501, y: 153))
point = CGPoint(x: 511, y: 153)
hairLightPath.addLine(to: point)
point = CGPoint(x: 522, y: 131)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 512, y: 138))
point = CGPoint(x: 523, y: 163)
hairLightPath.addLine(to: point)
point = CGPoint(x: 535, y: 128)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 526, y: 140))
point = CGPoint(x: 536, y: 138)
hairLightPath.addLine(to: point)
point = CGPoint(x: 539, y: 131)
hairLightPath.addLine(to: point)
point = CGPoint(x: 541, y: 136)
hairLightPath.addLine(to: point)
point = CGPoint(x: 547, y: 115)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 541, y: 129))
point = CGPoint(x: 541, y: 126)
hairLightPath.addLine(to: point)
point = CGPoint(x: 540, y: 124)
hairLightPath.addLine(to: point)
point = CGPoint(x: 539, y: 126)
hairLightPath.addLine(to: point)
point = CGPoint(x: 537, y: 117)
hairLightPath.addLine(to: point)
point = CGPoint(x: 526, y: 139)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 528, y: 127))
point = CGPoint(x: 526, y: 120)
hairLightPath.addLine(to: point)
point = CGPoint(x: 514, y: 138)
hairLightPath.addLine(to: point)
point = CGPoint(x: 513, y: 132)
hairLightPath.addLine(to: point)
point = CGPoint(x: 505, y: 142)
hairLightPath.addLine(to: point)
point = CGPoint(x: 506, y: 121)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 503, y: 125))
point = CGPoint(x: 486, y: 148)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 491, y: 133))
point = CGPoint(x: 500, y: 95)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 486, y: 113))
hairLightPath.close()
point = CGPoint(x: 592, y: 86)
hairLightPath.move(to: point)
point = CGPoint(x: 586, y: 147)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 583, y: 118))
point  = CGPoint(x: 607, y: 103)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 594, y: 114))
point = CGPoint(x: 607, y: 113)
hairLightPath.addLine(to: point)
point = CGPoint(x: 615, y: 104)
hairLightPath.addLine(to: point)
point = CGPoint(x: 615, y: 112)
hairLightPath.addLine(to: point)
point = CGPoint(x: 627, y: 89)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 627, y: 95))
point = CGPoint(x: 619, y: 99)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 625, y: 94))
point = CGPoint(x: 617, y: 94)
hairLightPath.addLine(to: point)
point = CGPoint(x: 612, y: 100)
hairLightPath.addLine(to: point)
point = CGPoint(x: 610, y: 93)
hairLightPath.addLine(to: point)
point = CGPoint(x: 592, y: 118)
hairLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 597, y: 103))
point = CGPoint(x: 592, y: 86)
hairLightPath.addCurve(to: point, controlPoint1: CGPoint(x: 594, y: 112), controlPoint2: CGPoint(x: 589, y: 98))
hairLightPath.close()
let hairLightLayer = CAGradientLayer()
let hairLightMaskLayer = CAShapeLayer()
hairLightLayer.frame = CGRect(x: 0, y: 0, width: 627, height: 179)
hairLightLayer.colors = [UIColor(red: 190 / 255, green: 155 / 255, blue: 133 / 255, alpha: CGFloat(alpha)).cgColor, UIColor(red: 190 / 255, green: 140 / 255, blue: 130 / 255, alpha: CGFloat(alpha)).cgColor]
hairLightLayer.locations = [NSNumber(value: Double(480 / 627)), 1]
hairLightLayer.startPoint = CGPoint(x: 480 / 627, y: 0.5)
hairLightLayer.endPoint = CGPoint(x: 1, y: 0.5)
hairLightMaskLayer.path = hairLightPath.cgPath
hairLightMaskLayer.fillColor = UIColor.black.cgColor
hairLightLayer.mask = hairLightMaskLayer

let facePath = UIBezierPath()
point = CGPoint(x: 512, y: 306)
facePath.move(to: point)
point = CGPoint(x: 557, y: 404)
facePath.addLine(to: point)
point = CGPoint(x: 601, y: 452)
facePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 568, y: 435))
point = CGPoint(x: 669, y: 486)
facePath.addLine(to: point)
point = CGPoint(x: 688, y: 487)
facePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 677, y: 491))
point = CGPoint(x: 733, y: 462)
facePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 715, y: 480))
point = CGPoint(x: 769, y: 412)
facePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 763, y: 425))
point = CGPoint(x: 788, y: 334)
facePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 786, y: 389))
point = CGPoint(x: 787, y: 252)
facePath.addLine(to: point)
point = CGPoint(x: 725, y: 92)
facePath.addLine(to: point)
point = CGPoint(x: 509, y: 188)
facePath.addLine(to: point)
point = CGPoint(x: 507, y: 279)
facePath.addLine(to: point)
facePath.close()
let faceLayer = CAGradientLayer()
let faceMaskLayer = CAShapeLayer()
let faceStrokeLayer = CAShapeLayer()
faceLayer.frame = CGRect(x: 0, y: 0, width: 787, height: 494)
faceLayer.colors = [UIColor(red: 246 / 255, green: 221 / 255, blue: 191 / 255, alpha: CGFloat(alpha)).cgColor, UIColor(red: 244 / 255, green: 213 / 255, blue: 193 / 255, alpha: CGFloat(alpha)).cgColor]
faceLayer.locations = [NSNumber(value: Double(507 / 787)), 1]
faceLayer.startPoint = CGPoint(x: 507 / 787, y: 0.5)
faceLayer.endPoint = CGPoint(x: 1, y: 0.5)
faceMaskLayer.path = facePath.cgPath
faceLayer.mask = faceMaskLayer
faceStrokeLayer.path = facePath.cgPath
faceStrokeLayer.fillColor = UIColor.clear.cgColor
faceStrokeLayer.strokeColor = strokeColor
faceStrokeLayer.lineWidth = 1.5

let eyebrowPath = UIBezierPath()
point = CGPoint(x: 582, y: 244)
eyebrowPath.move(to: point)
point = CGPoint(x: 526, y: 290)
eyebrowPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 536, y: 239))
point = CGPoint(x: 593, y: 258)
eyebrowPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 544, y: 251))
eyebrowPath.close()
point = CGPoint(x: 676, y: 237)
eyebrowPath.move(to: point)
point = CGPoint(x: 763, y: 228)
eyebrowPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 723, y: 200))
point = CGPoint(x: 678, y: 221)
eyebrowPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 718, y: 191))
eyebrowPath.close()
let eyebrowLayer = CAGradientLayer()
let eyebrowMaskLayer = CAShapeLayer()
let eyebrowStrokeLayer = CAShapeLayer()
eyebrowLayer.frame = CGRect(x: 0, y: 0, width: 840, height: 382)
eyebrowLayer.colors = [UIColor(red: 147 / 255, green: 108 / 255, blue: 79 / 255, alpha: CGFloat(alpha)).cgColor, UIColor(red: 145 / 255, green: 81 / 255, blue: 82 / 255, alpha: CGFloat(alpha)).cgColor]
eyebrowLayer.locations = [NSNumber(value: Double(385 / 840)), 1]
eyebrowLayer.startPoint = CGPoint(x: 385 / 840, y: 0.5)
eyebrowLayer.endPoint = CGPoint(x: 1, y: 0.5)
eyebrowMaskLayer.path = eyebrowPath.cgPath
eyebrowLayer.mask = eyebrowMaskLayer
eyebrowStrokeLayer.path = eyebrowPath.cgPath
eyebrowStrokeLayer.fillColor = UIColor.clear.cgColor
eyebrowStrokeLayer.strokeColor = strokeColor
eyebrowStrokeLayer.lineWidth = 1.5

let linesOnFacePath = UIBezierPath()
point = CGPoint(x: 585, y: 244)
linesOnFacePath.move(to: point)
point = CGPoint(x: 596, y: 258)
linesOnFacePath.addLine(to: point)
point = CGPoint(x: 595, y: 248)
linesOnFacePath.move(to: point)
point = CGPoint(x: 622, y: 286)
linesOnFacePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 619, y: 274))
point = CGPoint(x: 673, y: 225)
linesOnFacePath.move(to: point)
point = CGPoint(x: 672, y: 240)
linesOnFacePath.addLine(to: point)
point = CGPoint(x: 587, y: 289)
linesOnFacePath.move(to: point)
point = CGPoint(x: 599, y: 295)
linesOnFacePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 594, y: 291))
point = CGPoint(x: 689, y: 274)
linesOnFacePath.move(to: point)
point = CGPoint(x: 697, y: 265)
linesOnFacePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 692, y: 268))
point = CGPoint(x: 637, y: 315)
linesOnFacePath.move(to: point)
point = CGPoint(x: 636, y: 348)
linesOnFacePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 640, y: 335))
point = CGPoint(x: 639, y: 361)
linesOnFacePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 632, y: 357))
point = CGPoint(x: 650, y: 369)
linesOnFacePath.addLine(to: point)
point = CGPoint(x: 665, y: 360)
linesOnFacePath.move(to: point)
point = CGPoint(x: 671, y: 362)
linesOnFacePath.addLine(to: point)
point = CGPoint(x: 678, y: 462)
linesOnFacePath.move(to: point)
point = CGPoint(x: 696, y: 460)
linesOnFacePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 688, y: 464))
point = CGPoint(x: 685, y: 464)
linesOnFacePath.move(to: point)
point = CGPoint(x: 690, y: 464)
linesOnFacePath.addLine(to: point)
let linesOnFaceLayer = CAShapeLayer()
linesOnFaceLayer.path = linesOnFacePath.cgPath
linesOnFaceLayer.fillColor = UIColor.clear.cgColor
linesOnFaceLayer.strokeColor = strokeColor
linesOnFaceLayer.lineWidth = 1.5

let linesOnFaceThinPath = UIBezierPath()
point = CGPoint(x: 544, y: 346)
linesOnFaceThinPath.move(to: point)
point = CGPoint(x: 552, y: 348)
linesOnFaceThinPath.addLine(to: point)
point = CGPoint(x: 547, y: 341)
linesOnFaceThinPath.addLine(to: point)
point = CGPoint(x: 558, y: 345)
linesOnFaceThinPath.addLine(to: point)
point = CGPoint(x: 551, y: 336)
linesOnFaceThinPath.move(to: point)
point = CGPoint(x: 562, y: 343)
linesOnFaceThinPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 558, y: 338))
point = CGPoint(x: 750, y: 303)
linesOnFaceThinPath.move(to: point)
point = CGPoint(x: 754, y: 292)
linesOnFaceThinPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 752, y: 295))
point = CGPoint(x: 757, y: 301)
linesOnFaceThinPath.move(to: point)
point = CGPoint(x: 763, y: 294)
linesOnFaceThinPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 759, y: 296))
point = CGPoint(x: 762, y: 301)
linesOnFaceThinPath.addLine(to: point)
point = CGPoint(x: 770, y: 294)
linesOnFaceThinPath.addLine(to: point)
let linesOnFaceThinLayer = CAShapeLayer()
linesOnFaceThinLayer.path = linesOnFaceThinPath.cgPath
linesOnFaceThinLayer.fillColor = UIColor.clear.cgColor
linesOnFaceThinLayer.strokeColor = strokeColor
linesOnFaceThinLayer.lineWidth = 0.7

let eyePath = UIBezierPath()
point = CGPoint(x: 605, y: 303)
eyePath.move(to: point)
point = CGPoint(x: 546, y: 321)
eyePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 563, y: 293))
point = CGPoint(x: 549, y: 321)
eyePath.addLine(to: point)
point = CGPoint(x: 547, y: 326)
eyePath.addLine(to: point)
point = CGPoint(x: 550, y: 325)
eyePath.addLine(to: point)
point = CGPoint(x: 549, y: 328)
eyePath.addLine(to: point)
point = CGPoint(x: 601, y: 311)
eyePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 563, y: 303))
point = CGPoint(x: 608, y: 308)
eyePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 604, y: 311))
point = CGPoint(x: 606, y: 307)
eyePath.addLine(to: point)
point = CGPoint(x: 607, y: 305)
eyePath.addLine(to: point)
eyePath.close()
point = CGPoint(x: 698, y: 288)
eyePath.move(to: point)
point = CGPoint(x: 753, y: 277)
eyePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 719, y: 268))
point = CGPoint(x: 750, y: 274)
eyePath.addLine(to: point)
point = CGPoint(x: 750, y: 273)
eyePath.addLine(to: point)
point = CGPoint(x: 745, y: 269)
eyePath.addLine(to: point)
point = CGPoint(x: 751, y: 270)
eyePath.addLine(to: point)
point = CGPoint(x: 742, y: 265)
eyePath.addLine(to: point)
point = CGPoint(x: 692, y: 280)
eyePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 718, y: 262))
point = CGPoint(x: 692, y: 285)
eyePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 689, y: 283))
point = CGPoint(x: 689, y: 290)
eyePath.addLine(to: point)
point = CGPoint(x: 691, y: 292)
eyePath.addLine(to: point)
eyePath.close()
let eyeLayer = CAShapeLayer()
eyeLayer.path = eyePath.cgPath
eyeLayer.fillColor = UIColor(red: 50 / 255, green: 15 / 255, blue: 15 / 255, alpha: CGFloat(alpha)).cgColor

let mouthPath = UIBezierPath()
point = CGPoint(x: 618, y: 409)
mouthPath.move(to: point)
point = CGPoint(x: 713, y: 384)
mouthPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 678, y: 398))
point = CGPoint(x: 731, y: 400)
mouthPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 736, y: 373))
point = CGPoint(x: 698, y: 444)
mouthPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 723, y: 424))
point = CGPoint(x: 673, y: 449)
mouthPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 684, y: 450))
point = CGPoint(x: 623, y: 410)
mouthPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 636, y: 434))
mouthPath.close()
let mouthStrokePath = UIBezierPath()
point = CGPoint(x: 618, y: 409)
mouthStrokePath.move(to: point)
point = CGPoint(x: 713, y: 384)
mouthStrokePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 678, y: 398))
point = CGPoint(x: 731, y: 400)
mouthStrokePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 736, y: 373))
point = CGPoint(x: 698, y: 444)
mouthStrokePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 723, y: 424))
point = CGPoint(x: 673, y: 449)
mouthStrokePath.move(to: point)
point = CGPoint(x: 623, y: 410)
mouthStrokePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 636, y: 434))
let teethPath = UIBezierPath()
point = CGPoint(x: 627, y: 419)
teethPath.move(to: point)
point = CGPoint(x: 669, y: 416)
teethPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 648, y: 422))
point = CGPoint(x: 731, y: 389)
teethPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 716, y: 404))
point = CGPoint(x: 730, y: 361)
teethPath.addLine(to: point)
point = CGPoint(x: 599, y: 393)
teethPath.addLine(to: point)
teethPath.close()
let tonguePath = UIBezierPath()
point = CGPoint(x: 645, y: 437)
tonguePath.move(to: point)
point = CGPoint(x: 675, y: 424)
tonguePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 659, y: 424))
point = CGPoint(x: 727, y: 415)
tonguePath.addCurve(to: point, controlPoint1: CGPoint(x: 687, y: 425), controlPoint2: CGPoint(x: 706, y: 410))
point = CGPoint(x: 730, y: 445)
tonguePath.addLine(to: point)
point = CGPoint(x: 642, y: 460)
tonguePath.addLine(to: point)
tonguePath.close()
let mouthLayer = CAShapeLayer()
let mouthStrokeLayer = CAShapeLayer()
let teethLayer = CAShapeLayer()
let teethMaskLayer = CAShapeLayer()
let tongueLayer = CAShapeLayer()
let tongueMaskLayer = CAShapeLayer()
mouthLayer.path = mouthPath.cgPath
mouthLayer.fillColor = UIColor(red: 200 / 255, green: 105 / 255, blue: 100 / 255, alpha: CGFloat(alpha)).cgColor
mouthStrokeLayer.path = mouthStrokePath.cgPath
mouthStrokeLayer.fillColor = UIColor.clear.cgColor
mouthStrokeLayer.strokeColor = strokeColor
mouthStrokeLayer.lineWidth = 1.5
teethMaskLayer.path = mouthPath.cgPath
teethLayer.path = teethPath.cgPath
teethLayer.fillColor = UIColor(red: 253 / 255, green: 253 / 255, blue: 253 / 255, alpha: CGFloat(alpha)).cgColor
teethLayer.strokeColor = strokeColor
teethLayer.lineWidth = 1.5
teethLayer.mask = teethMaskLayer
tongueMaskLayer.path = mouthPath.cgPath
tongueLayer.path = tonguePath.cgPath
tongueLayer.fillColor = UIColor(red: 225 / 255, green: 130 / 255, blue: 130 / 255, alpha: CGFloat(alpha)).cgColor
tongueLayer.strokeColor = strokeColor
tongueLayer.lineWidth = 1.5
tongueLayer.mask = tongueMaskLayer

let earPath = UIBezierPath()
point = CGPoint(x: 503, y: 327)
earPath.move(to: point)
point = CGPoint(x: 485, y: 358)
earPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 485, y: 325))
point = CGPoint(x: 489, y: 373)
earPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 485, y: 366))
point = CGPoint(x: 509, y: 398)
earPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 491, y: 385))
point = CGPoint(x: 522, y: 405)
earPath.addLine(to: point)
point = CGPoint(x: 557, y: 403)
earPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 542, y: 412))
point = CGPoint(x: 529, y: 336)
earPath.addLine(to: point)
earPath.close()
let earDarkPath = UIBezierPath()
point = CGPoint(x: 499, y: 362)
earDarkPath.move(to: point)
point = CGPoint(x: 500, y: 347)
earDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 496, y: 353))
point = CGPoint(x: 536, y: 379)
earDarkPath.addCurve(to: point, controlPoint1: CGPoint(x: 530, y: 355), controlPoint2: CGPoint(x: 507, y: 369))
point = CGPoint(x: 537, y: 390)
earDarkPath.addLine(to: point)
point = CGPoint(x: 521, y: 390)
earDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 529, y: 393))
point = CGPoint(x: 499, y: 362)
earDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 506, y: 386))
let earDarkStrokePath = UIBezierPath()
point = CGPoint(x: 499, y: 362)
earDarkStrokePath.move(to: point)
point = CGPoint(x: 500, y: 347)
earDarkStrokePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 496, y: 353))
point = CGPoint(x: 536, y: 379)
earDarkStrokePath.addCurve(to: point, controlPoint1: CGPoint(x: 530, y: 355), controlPoint2: CGPoint(x: 507, y: 369))
point = CGPoint(x: 537, y: 390)
earDarkStrokePath.addLine(to: point)
point = CGPoint(x: 521, y: 390)
earDarkStrokePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 529, y: 393))
point = CGPoint(x: 510, y: 367)
earDarkStrokePath.move(to: point)
point = CGPoint(x: 517, y: 361)
earDarkStrokePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 510, y: 360))
let earHolePath = UIBezierPath()
point = CGPoint(x: 528, y: 376)
earHolePath.move(to: point)
point = CGPoint(x: 537, y: 380)
earHolePath.addLine(to: point)
point = CGPoint(x: 537, y: 385)
earHolePath.addLine(to: point)
point = CGPoint(x: 528, y: 376)
earHolePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 529, y: 383))
earHolePath.close()
point = CGPoint(x: 805, y: 330)
earHolePath.move(to: point)
point = CGPoint(x: 802, y: 342)
earHolePath.addQuadCurve(to: point, controlPoint: CGPoint(x: 806, y: 335))
point = CGPoint(x: 800, y: 335)
earHolePath.addLine(to: point)
earHolePath.close()
let earLayer = CAShapeLayer()
let earDarkLayer = CAShapeLayer()
let earDarkStrokeLayer = CAShapeLayer()
let earHoleLayer = CAShapeLayer()
earLayer.path = earPath.cgPath
earLayer.fillColor = UIColor(red: 245 / 255, green: 220 / 255, blue: 190 / 255, alpha: CGFloat(alpha)).cgColor
earLayer.strokeColor = strokeColor
earLayer.lineWidth = 1.5
earDarkLayer.path = earDarkPath.cgPath
earDarkLayer.fillColor = UIColor(red: 223 / 255, green: 170 / 255, blue: 150 / 255, alpha: CGFloat(alpha)).cgColor
earDarkStrokeLayer.path = earDarkStrokePath.cgPath
earDarkStrokeLayer.fillColor = UIColor.clear.cgColor
earDarkStrokeLayer.strokeColor = strokeColor
earDarkStrokeLayer.lineWidth = 1.5
earHoleLayer.path = earHolePath.cgPath
earHoleLayer.fillColor = strokeColor

let earPath2 = UIBezierPath()
point = CGPoint(x: 804, y: 271)
earPath2.move(to: point)
point = CGPoint(x: 839, y: 274)
earPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 822, y: 252))
point = CGPoint(x: 821, y: 350)
earPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 856, y: 319))
point = CGPoint(x: 808, y: 360)
earPath2.addLine(to: point)
point = CGPoint(x: 787, y: 359)
earPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 795, y: 366))
point = CGPoint(x: 780, y: 303)
earPath2.addLine(to: point)
earPath2.close()
let earDarkPath2 = UIBezierPath()
point = CGPoint(x: 828, y: 292)
earDarkPath2.move(to: point)
point = CGPoint(x: 813, y: 285)
earDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 819, y: 276))
point = CGPoint(x: 803, y: 301)
earDarkPath2.addLine(to: point)
point = CGPoint(x: 808, y: 311)
earDarkPath2.addLine(to: point)
point = CGPoint(x: 800, y: 335)
earDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 813, y: 321))
point = CGPoint(x: 820, y: 333)
earDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 802, y: 353))
point = CGPoint(x: 828, y: 292)
earDarkPath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 837, y: 307))
earDarkPath2.close()
let earDarkStrokePath2 = UIBezierPath()
point = CGPoint(x: 828, y: 292)
earDarkStrokePath2.move(to: point)
point = CGPoint(x: 813, y: 285)
earDarkStrokePath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 819, y: 276))
point = CGPoint(x: 803, y: 301)
earDarkStrokePath2.addLine(to: point)
point = CGPoint(x: 808, y: 311)
earDarkStrokePath2.addLine(to: point)
point = CGPoint(x: 800, y: 335)
earDarkStrokePath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 813, y: 321))
point = CGPoint(x: 820, y: 333)
earDarkStrokePath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 802, y: 353))
point = CGPoint(x: 808, y: 312)
earDarkStrokePath2.move(to: point)
point = CGPoint(x: 821, y: 309)
earDarkStrokePath2.addQuadCurve(to: point, controlPoint: CGPoint(x: 819, y: 300))
let earLayer2 = CAShapeLayer()
let earDarkLayer2 = CAShapeLayer()
let earDarkStrokeLayer2 = CAShapeLayer()
earLayer2.path = earPath2.cgPath
earLayer2.fillColor = UIColor(red: 220 / 255, green: 155 / 255, blue: 155 / 255, alpha: CGFloat(alpha)).cgColor
earLayer2.strokeColor = strokeColor
earLayer2.lineWidth = 1.5
earDarkLayer2.path = earDarkPath2.cgPath
earDarkLayer2.fillColor = UIColor(red: 190 / 255, green: 95 / 255, blue: 115 / 255, alpha: CGFloat(alpha)).cgColor
earDarkStrokeLayer2.path = earDarkStrokePath2.cgPath
earDarkStrokeLayer2.fillColor = UIColor.clear.cgColor
earDarkStrokeLayer2.strokeColor = strokeColor
earDarkStrokeLayer2.lineWidth = 1.5

let faceDarkPath = UIBezierPath()
point = CGPoint(x: 521, y: 323)
faceDarkPath.move(to: point)
point = CGPoint(x: 520, y: 305)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 525, y: 295)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 532, y: 307)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 531, y: 275)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 545, y: 252)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 551, y: 271)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 562, y: 206)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 553, y: 231))
point = CGPoint(x: 578, y: 236)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 590, y: 222)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 607, y: 218)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 637, y: 174)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 657, y: 188)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 677, y: 149)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 671, y: 171))
point = CGPoint(x: 684, y: 171)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 704, y: 204)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 726, y: 163)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 718, y: 186))
point = CGPoint(x: 741, y: 189)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 731, y: 178))
point = CGPoint(x: 730, y: 75)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 482, y: 207)
faceDarkPath.addLine(to: point)
faceDarkPath.close()
point = CGPoint(x: 619, y: 278)
faceDarkPath.move(to: point)
point = CGPoint(x: 592, y: 246)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 606, y: 256))
point = CGPoint(x: 590, y: 256)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 619, y: 278)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 605, y: 264))
faceDarkPath.close()
point = CGPoint(x: 638, y: 331)
faceDarkPath.move(to: point)
point = CGPoint(x: 632, y: 350)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 637, y: 364)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 627, y: 360))
point = CGPoint(x: 645, y: 366)
faceDarkPath.addLine(to: point)
point  = CGPoint(x: 640, y: 362)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 637, y: 346)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 631, y: 358))
point = CGPoint(x: 638, y: 331)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 638, y: 343))
faceDarkPath.close()
point = CGPoint(x: 679, y: 463)
faceDarkPath.move(to: point)
point = CGPoint(x: 697, y: 460)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 689, y: 476))
point = CGPoint(x: 679, y: 463)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 687, y: 464))
faceDarkPath.close()
point = CGPoint(x: 761, y: 233)
faceDarkPath.move(to: point)
point = CGPoint(x: 758, y: 301)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 772, y: 283))
point = CGPoint(x: 767, y: 317)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 769, y: 308))
point = CGPoint(x: 744, y: 448)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 770, y: 406))
point = CGPoint(x: 763, y: 423)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 788, y: 270)
faceDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 789, y: 382))
point = CGPoint(x: 789, y: 248)
faceDarkPath.addLine(to: point)
point = CGPoint(x: 765, y: 197)
faceDarkPath.addLine(to: point)
faceDarkPath.close()
let faceDarkLayer = CAGradientLayer()
let faceDarkMaskLayer = CAShapeLayer()
faceDarkLayer.frame = CGRect(x: 0, y: 0, width: 998, height: 662)
faceDarkLayer.colors = [UIColor(red: 223 / 255, green: 170 / 255, blue: 153 / 255, alpha: CGFloat(alpha)).cgColor, UIColor(red: 215 / 255, green: 150 / 255, blue: 158 / 255, alpha: CGFloat(alpha)).cgColor]
faceDarkLayer.locations = [NSNumber(value: Double(540 / 998)), 1]
faceDarkLayer.startPoint = CGPoint(x: 540 / 998, y: 0.5)
faceDarkLayer.endPoint = CGPoint(x: 1, y: 0.5)
faceDarkMaskLayer.path = faceDarkPath.cgPath
faceDarkLayer.mask = faceDarkMaskLayer

let faceLightPath = UIBezierPath(ovalIn: CGRect(x: 544, y: 335, width: 11, height: 7))
let faceLightPath2 = UIBezierPath(ovalIn: CGRect(x: 748, y: 289, width: 12, height: 5))
let faceLightLayer = CAShapeLayer()
let faceLightLayer2 = CAShapeLayer()
faceLightLayer.path = faceLightPath.cgPath
faceLightLayer2.path = faceLightPath2.cgPath
faceLightLayer.fillColor = UIColor(red: 1, green: 240 / 255, blue: 230 / 255, alpha: CGFloat(alpha)).cgColor
faceLightLayer2.fillColor = UIColor(red: 1, green: 240 / 255, blue: 230 / 255, alpha: CGFloat(alpha)).cgColor

let neckPath = UIBezierPath()
point = CGPoint(x: 600, y: 452)
neckPath.move(to: point)
point = CGPoint(x: 612, y: 546)
neckPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 610, y: 501))
point = CGPoint(x: 611, y: 526)
neckPath.addLine(to: point)
point = CGPoint(x: 540, y: 582)
neckPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 578, y: 559))
point = CGPoint(x: 520, y: 691)
neckPath.addLine(to: point)
point = CGPoint(x: 860, y: 687)
neckPath.addLine(to: point)
point = CGPoint(x: 834, y: 549)
neckPath.addLine(to: point)
point = CGPoint(x: 774, y: 517)
neckPath.addLine(to: point)
point = CGPoint(x: 771, y: 543)
neckPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 774, y: 530))
neckPath.addQuadCurve(to: CGPoint(x: 774, y: 517), controlPoint: CGPoint(x: 774, y: 530))
point = CGPoint(x: 774, y: 405)
neckPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 777, y: 493))
neckPath.close()
let neckLayer = CAGradientLayer()
let neckMaskLayer = CAShapeLayer()
neckLayer.frame = CGRect(x: 0, y: 0, width: 860, height: 691)
neckLayer.colors = [UIColor(red: 246 / 255, green: 221 / 255, blue: 191 / 255, alpha: CGFloat(alpha)).cgColor, UIColor(red: 245 / 255, green: 213 / 255, blue: 195 / 255, alpha: CGFloat(alpha)).cgColor]
neckLayer.locations = [NSNumber(value: Double(540 / 860)), NSNumber(value: Double(803 / 860))]
neckLayer.startPoint = CGPoint(x: 540 / 860, y: 0.5)
neckLayer.endPoint = CGPoint(x: 804 / 860, y: 0.5)
neckMaskLayer.path = neckPath.cgPath
neckLayer.mask = neckMaskLayer
point = CGPoint(x: 715, y: 509)
neckPath.move(to: point)
point = CGPoint(x: 669, y: 623)
neckPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 695, y: 608))
point = CGPoint(x: 660, y: 629)
neckPath.move(to: point)
point = CGPoint(x: 650, y: 635)
neckPath.addLine(to: point)
point = CGPoint(x: 639, y: 634)
neckPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 644, y: 638))
point = CGPoint(x: 630, y: 626)
neckPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 636, y: 629))
let neckStrokeLayer = CAShapeLayer()
neckStrokeLayer.path = neckPath.cgPath
neckStrokeLayer.fillColor = UIColor.clear.cgColor
neckStrokeLayer.strokeColor = strokeColor

let neckDarkPath = UIBezierPath()
point = CGPoint(x: 600, y: 452)
neckDarkPath.move(to: point)
point = CGPoint(x: 605, y: 485)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 614, y: 471)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 666, y: 525)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 636, y: 505))
point = CGPoint(x: 689, y: 523)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 680, y: 530))
point = CGPoint(x: 705, y: 510)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 689, y: 594)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 700, y: 548))
point = CGPoint(x: 736, y: 475)
neckDarkPath.addCurve(to: point, controlPoint1: CGPoint(x: 716, y: 542), controlPoint2: CGPoint(x: 706, y: 533))
point = CGPoint(x: 743, y: 472)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 757, y: 593)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 772, y: 525))
point = CGPoint(x: 780, y: 547)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 783, y: 546)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 804, y: 579)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 798, y: 560))
point = CGPoint(x: 828, y: 569)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 833, y: 551)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 774, y: 521)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 770, y: 544)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 774, y: 532))
point = CGPoint(x: 773, y: 430)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 769, y: 492))
point = CGPoint(x: 773, y: 407)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 601, y: 454)
neckDarkPath.addLine(to: point)
neckDarkPath.close()
point = CGPoint(x: 611, y: 551)
neckDarkPath.move(to: point)
point = CGPoint(x: 602, y: 570)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 613, y: 576)
neckDarkPath.addLine(to: point)
neckDarkPath.close()
point = CGPoint(x: 626, y: 622)
neckDarkPath.move(to: point)
point = CGPoint(x: 661, y: 620)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 650, y: 626))
point = CGPoint(x: 676, y: 617)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 651, y: 635)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 640, y: 635)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 645, y: 638))
neckDarkPath.close()
point = CGPoint(x: 549, y: 577)
neckDarkPath.move(to: point)
point = CGPoint(x: 565, y: 610)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 548, y: 591))
point = CGPoint(x: 617, y: 647)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 657, y: 654)
neckDarkPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 642, y: 655))
point = CGPoint(x: 638, y: 662)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 534, y: 594)
neckDarkPath.addLine(to: point)
point = CGPoint(x: 540, y: 582)
neckDarkPath.addLine(to: point)
neckDarkPath.close()
let neckDarkLayer = CAGradientLayer()
let neckDarkMaskLayer = CAShapeLayer()
neckDarkLayer.frame = CGRect(x: 0, y: 0, width: 833, height: 662)
neckDarkLayer.colors = [UIColor(red: 220 / 255, green: 165 / 255, blue: 150 / 255, alpha: CGFloat(alpha)).cgColor, UIColor(red: 220 / 255, green: 155 / 255, blue: 155 / 255, alpha: CGFloat(alpha)).cgColor]
neckDarkLayer.locations = [NSNumber(value: Double(540 / 833)), 1]
neckDarkLayer.startPoint = CGPoint(x: 540 / 833, y: 0.5)
neckDarkLayer.endPoint = CGPoint(x: 1, y: 0.5)
neckDarkMaskLayer.path = neckDarkPath.cgPath
neckDarkLayer.mask = neckDarkMaskLayer

let neckLightPath = UIBezierPath()
point = CGPoint(x: 607, y: 490)
neckLightPath.move(to: point)
point = CGPoint(x: 612, y: 547)
neckLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 616, y: 518))
neckLightPath.close()
point = CGPoint(x: 607, y: 530)
neckLightPath.move(to: point)
point = CGPoint(x: 559, y: 570)
neckLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 598, y: 550))
point = CGPoint(x: 607, y: 530)
neckLightPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 588, y: 550))
neckLightPath.close()
let neckLightLayer = CAShapeLayer()
neckLightLayer.path = neckLightPath.cgPath
neckLightLayer.fillColor = UIColor(red: 1, green: 240 / 255, blue: 230 / 255, alpha: CGFloat(alpha)).cgColor

//let clothesPath = UIBezierPath()
//point = CGPoint(x: 548, y: 577)
//clothesPath.move(to: point)
//point = CGPoint(x: 537, y: 570)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 512, y: 593)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 506, y: 591)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 487, y: 601)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 498, y: 585))
//point = CGPoint(x: 397, y: 647)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 451, y: 627))
//point = CGPoint(x: 380, y: 657)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 385, y: 650))
//point = CGPoint(x: 370, y: 668)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 373, y: 660))
//point = CGPoint(x: 347, y: 726)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 357, y: 691))
//point = CGPoint(x: 330, y: 779)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 304, y: 897)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 310, y: 833))
//point = CGPoint(x: 304, y: 895)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 294, y: 895)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 295, y: 899)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 292, y: 899)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 277, y: 934)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 324, y: 993)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 345, y: 1005)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 329, y: 1002))
//point = CGPoint(x: 423, y: 1024)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 427, y: 1162)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 418, y: 1105))
//point = CGPoint(x: 438, y: 1299)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 430, y: 1260))
//point = CGPoint(x: 423, y: 1376)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 429, y: 1403)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 419, y: 1393))
//point = CGPoint(x: 446, y: 1418)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 447, y: 1406)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 444, y: 1407)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 791, y: 1383)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 611, y: 1372))
//point = CGPoint(x: 887, y: 1387)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 890, y: 1406)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 913, y: 1382)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 904, y: 1395))
//point = CGPoint(x: 914, y: 1364)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 918, y: 1374))
//point = CGPoint(x: 893, y: 1309)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 903, y: 1327))
//point = CGPoint(x: 907, y: 1287)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 899, y: 1294))
//point = CGPoint(x: 908, y: 1281)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 910, y: 1284))
//point = CGPoint(x: 890, y: 1250)
//clothesPath.addCurve(to: point, controlPoint1: CGPoint(x: 898, y: 1256), controlPoint2: CGPoint(x: 890, y: 1260))
//point = CGPoint(x: 912, y: 1221)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 914, y: 1213)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 915, y: 1216))
//point = CGPoint(x: 904, y: 1190)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 919, y: 1090)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 932, y: 1028)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 926, y: 1048))
//point = CGPoint(x: 960, y: 911)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 963, y: 912)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 958, y: 881)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 960, y: 901))
//point = CGPoint(x: 998, y: 779)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 977, y: 809))
//point = CGPoint(x: 998, y: 615)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 980, y: 550)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 943, y: 547)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 971, y: 543))
//point = CGPoint(x: 883, y: 556)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 890, y: 555)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 880, y: 547)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 868, y: 553)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 840, y: 541)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 850, y: 549))
//point = CGPoint(x: 829, y: 547)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 834, y: 549)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 835, y: 547)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 827, y: 563)
//clothesPath.addLine(to: point)
//point = CGPoint(x: 754, y: 615)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 784, y: 589))
//point = CGPoint(x: 653, y: 655)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 731, y: 631))
//point = CGPoint(x: 622, y: 651)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 638, y: 661))
//point = CGPoint(x: 561, y: 608)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 589, y: 622))
//point = CGPoint(x: 539, y: 579)
//clothesPath.addQuadCurve(to: point, controlPoint: CGPoint(x: 543, y: 600))
//point = CGPoint(x: 540, y: 582)
//clothesPath.addLine(to: point)
//clothesPath.close()
//let clothesLayer = CAGradientLayer()
//let clothesMaskLayer = CAShapeLayer()
//clothesLayer.frame = CGRect(x: 0, y: 0, width: 998, height: 1418)
//clothesLayer.colors = [UIColor(red: 238 / 255, green: 153 / 255, blue: 110 / 255, alpha: CGFloat(alpha)).cgColor, UIColor(red: 234 / 255, green: 127 / 255, blue: 118 / 255, alpha: CGFloat(alpha)).cgColor]
//clothesLayer.locations = [NSNumber(value: Double(277 / 998)), 1]
//clothesLayer.startPoint = CGPoint(x: 277 / 998, y: 0.5)
//clothesLayer.endPoint = CGPoint(x: 1, y: 0.5)
//clothesMaskLayer.path = clothesPath.cgPath
//clothesLayer.mask = clothesMaskLayer
//let clothesStrokeLayer = CAShapeLayer()
//clothesStrokeLayer.path = clothesPath.cgPath
//clothesStrokeLayer.fillColor = UIColor.clear.cgColor
//clothesStrokeLayer.strokeColor = strokeColor
//clothesStrokeLayer.lineWidth = 1.5





let image = UIImage(named: "PT.jpeg")
let imageView = UIImageView(image: image)
//let backgroundView = UIView(frame: imageView.frame)
let backgroundView = UIView(frame: CGRect(x: 0, y: 0, width: 998, height: 550))
backgroundView.backgroundColor = UIColor.clear
//backgroundView.addSubview(imageView)
backgroundView.layer.addSublayer(earLayer)
backgroundView.layer.addSublayer(earLayer2)
backgroundView.layer.addSublayer(earDarkLayer)
backgroundView.layer.addSublayer(earDarkLayer2)
backgroundView.layer.addSublayer(earDarkStrokeLayer)
backgroundView.layer.addSublayer(earDarkStrokeLayer2)
backgroundView.layer.addSublayer(earHoleLayer)
backgroundView.layer.addSublayer(neckLayer)
backgroundView.layer.addSublayer(neckDarkLayer)
backgroundView.layer.addSublayer(neckLightLayer)
backgroundView.layer.addSublayer(neckStrokeLayer)
//backgroundView.layer.addSublayer(clothesLayer)
//backgroundView.layer.addSublayer(clothesStrokeLayer)
backgroundView.layer.addSublayer(faceLayer)
backgroundView.layer.addSublayer(faceDarkLayer)
backgroundView.layer.addSublayer(faceLightLayer)
backgroundView.layer.addSublayer(faceLightLayer2)
backgroundView.layer.addSublayer(faceStrokeLayer)
backgroundView.layer.addSublayer(linesOnFaceLayer)
backgroundView.layer.addSublayer(linesOnFaceThinLayer)
backgroundView.layer.addSublayer(eyebrowLayer)
backgroundView.layer.addSublayer(eyebrowStrokeLayer)
backgroundView.layer.addSublayer(eyeLayer)
backgroundView.layer.addSublayer(mouthLayer)
backgroundView.layer.addSublayer(teethLayer)
backgroundView.layer.addSublayer(tongueLayer)
backgroundView.layer.addSublayer(mouthStrokeLayer)
backgroundView.layer.addSublayer(hairLayer)
backgroundView.layer.addSublayer(hairDarkLayer)
backgroundView.layer.addSublayer(hairDarkLayer2)
backgroundView.layer.addSublayer(hairLightLayer)
backgroundView.layer.addSublayer(hairStrokeLayer)
backgroundView
